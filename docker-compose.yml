version: "3.7"
services:
  event-tracker:
    build: .docker/eventTracker
    volumes:
      - .:/app
    ports:
      - "9284:1234"
    depends_on:
      - mongodb
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=bWAmd9AjyGM444cQ
    volumes:
      - .docker/data/mongodb:/data/db
    ports:
      - 37017:27017
    command: mongod --logpath=/dev/null # --quiet

  postgres:
    container_name: postgres
    image: postgres:9.5-alpine
#    ports:
#      - "0901:5432"
    env_file: .docker/redash/env
    volumes:
      - .docker/data/redash/postgres-data:/var/lib/postgresql/data
    restart: always
  redis:
    container_name: redis
    image: redis:5.0-alpine
    restart: always

  server:
    container_name: server
    image: redash/redash
    depends_on:
      - postgres
      - redis
    env_file: .docker/redash/env
    restart: always
    command: server
#    ports:
#      - "80:5000"
    environment:
      REDASH_WEB_WORKERS: 4
  scheduler:
    container_name: scheduler
    image: redash/redash
    depends_on:
      - postgres
      - redis
    env_file: .docker/redash/env
    restart: always
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    container_name: scheduled_worker
    image: redash/redash
    depends_on:
      - postgres
      - redis
    env_file: .docker/redash/env
    restart: always
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    container_name: adhoc_worker
    image: redash/redash
    depends_on:
      - postgres
      - redis
    env_file: .docker/redash/env
    restart: always
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
  nginx:
    container_name: nginx
    image: redash/nginx:latest
    ports:
      - "9390:80"
    depends_on:
      - server
    links:
      - server:redash
    restart: always
